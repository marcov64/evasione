	
Label Root
{
	Son: Market
	Label Market
	{
		Son: Demand
		Label Demand
		{
			Son: Consumer
			Label Consumer
			{
				Son: cLink
				Label cLink
				{
					Param: idcLink

				}

				Son: Supplier
				Label Supplier
				{
					Param: idSupplier
					Param: sapp

				}

				Param: idConsumer
				Param: ProdUsed
				Param: ConsumerWelfare
				Var: ProbAcceptEvasion
				Param: Fined

			}

			Param: numConsumer
			Param: numcLinks
			Var: InitDemand
			Param: numSuppliers
			Param: ExpPurchase
			Param: aUtility
			Param: aProbEvasion
			Param: WeightDirectExperience

		}

		Son: Supply
		Label Supply
		{
			Son: Firm
			Label Firm
			{
				Son: fLink
				Label fLink
				{
					Param: idfLink

				}

				Param: idFirm
				Param: Sales
				Var: Evading
				Var: Utility
				Param: MemoryControlled
				Param: Punished
				Var: AvSalesEvading
				Var: AvSalesNoEvading
				Param: GainEvading
				Param: CostEvading
				Var: AvSales
				Var: Profit

			}

			Param: numfLinks
			Param: numFirms
			Var: InitSupply
			Func: Purchase
			Param: BasicUtility
			Param: UnitTax
			Param: UnitGainEvasion
			Param: UnitFine
			Param: LumpPunishment
			Param: aAvSales
			Param: UnitProfit
			Param: aMemControlled
			Param: weightPersonalMemory

		}

		Var: Init
		Param: ProbFirmControl
		Param: ProbConsumerControl
		Var: Shopping
		Var: Statistics
		Param: AvEvading
		Param: AvProfit
		Param: AvMemControlled
		Param: ProbControl
		Var: GovernmentUtility
		Param: TotalCost
		Param: TotalFine
		Param: TotalControls
		Param: CostControl
		Param: TotalCaughtEvading

	}


}


DATA

Object: Root C	1

Object: Market C	100
Var: Init 0 n + n n
Param: ProbFirmControl 0 n + n n	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01	0.01
Param: ProbConsumerControl 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: Shopping 0 s + d n
Var: Statistics 0 n + n n
Param: AvEvading 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: AvProfit 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: AvMemControlled 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: ProbControl 0 n + n n	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1	0.1
Var: GovernmentUtility 0 s + d n
Param: TotalCost 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: TotalFine 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: TotalControls 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: CostControl 0 n + n n	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02	0.02
Param: TotalCaughtEvading 0 s + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0

Object: Demand C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: numConsumer 0 n + n n	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000	1000
Param: numcLinks 0 n + n n	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10
Var: InitDemand 0 n + n n
Param: numSuppliers 0 n + n n	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10
Param: ExpPurchase 0 n + n n	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: aUtility 0 n + n n	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9
Param: aProbEvasion 0 n + n n	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9
Param: WeightDirectExperience 0 n + n n	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5	0.5

Object: Consumer C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: idConsumer 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: ProdUsed 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: ConsumerWelfare 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: ProbAcceptEvasion 1 n + n n	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: Fined 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0

Object: cLink C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: idcLink 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0

Object: Supplier C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: idSupplier 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: sapp 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0

Object: Supply C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: numfLinks 0 n + n n	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5	5
Param: numFirms 0 n + n n	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100	100
Var: InitSupply 0 n + n n
Func: Purchase 0 n + n n
Param: BasicUtility 0 n + n n	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: UnitTax 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: UnitGainEvasion 0 n + n n	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5	1.5
Param: UnitFine 0 n + n n	0.5	0.510101	0.520202	0.530303	0.540404	0.550505	0.560606	0.570707	0.580808	0.590909	0.60101	0.611111	0.621212	0.631313	0.641414	0.651515	0.661616	0.671717	0.681818	0.691919	0.70202	0.712121	0.722222	0.732323	0.742424	0.752525	0.762626	0.772727	0.782828	0.792929	0.80303	0.813131	0.823232	0.833333	0.843434	0.853535	0.863636	0.873737	0.883838	0.893939	0.90404	0.914141	0.924242	0.934343	0.944444	0.954545	0.964646	0.974747	0.984848	0.994949	1.00505	1.01515	1.02525	1.03535	1.04545	1.05556	1.06566	1.07576	1.08586	1.09596	1.10606	1.11616	1.12626	1.13636	1.14646	1.15657	1.16667	1.17677	1.18687	1.19697	1.20707	1.21717	1.22727	1.23737	1.24747	1.25758	1.26768	1.27778	1.28788	1.29798	1.30808	1.31818	1.32828	1.33838	1.34848	1.35859	1.36869	1.37879	1.38889	1.39899	1.40909	1.41919	1.42929	1.43939	1.44949	1.4596	1.4697	1.4798	1.4899	1.5
Param: LumpPunishment 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: aAvSales 0 n + n n	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9
Param: UnitProfit 0 n + n n	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: aMemControlled 0 n + n n	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9
Param: weightPersonalMemory 0 n + n n	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9	0.9

Object: Firm C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: idFirm 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: Sales 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: Evading 1 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: Utility 0 n + n n
Param: MemoryControlled 1 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: Punished 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: AvSalesEvading 1 n + n n	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10
Var: AvSalesNoEvading 1 n + n n	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10
Param: GainEvading 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Param: CostEvading 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0
Var: AvSales 1 n + n n	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10	10
Var: Profit 0 n + n n

Object: fLink C	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1	1
Param: idfLink 0 n + n n	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0	0

SIM_NUM 1
SEED 1
MAX_STEP 10000
EQUATION fun_evasione.cpp
 MODELREPORT report_Sim1.html

DESCRIPTION

Object_Root
(no description available)
END_DESCRIPTION

Object_Market
'Market' appears in the equation for: (Never Used).
_INIT_

END_DESCRIPTION

Variable_Init
Initialize the model

'Init' appears in the equation for: (Never Used).
_INIT_

END_DESCRIPTION

Parameter_ProbFirmControl
Probability of a firm to be controlled by the government. If found evading, it has to pay a fine on sales and a lump sum as penalty.

'ProbFirmControl' appears in the equation for: Evading.
_INIT_

END_DESCRIPTION

Parameter_ProbConsumerControl
Probability for consumers to be controlled by the government. If found purchasing products from cheating firms they are subject to a fine, reducing their welfare.

'ProbConsumerControl' appears in the equation for: ProbAcceptEvasion, Shopping.
_INIT_

END_DESCRIPTION

Variable_Shopping
Round of purchase for each consumer. After purchasing, the government may control whether the supplier has evaded and punishes the consumer cutting setting the flag Fined=1

'Shopping' appears in the equation for: AvSales, Profit.
_INIT_

END_DESCRIPTION

Variable_Statistics
Stastics

'Statistics' appears in the equation for: (Never Used).
_INIT_

END_DESCRIPTION

Parameter_AvEvading
Global share of evading firms
'AvEvading' appears in the equation for: Statistics.
_INIT_

END_DESCRIPTION

Parameter_AvProfit
Global average of profits.

'AvProfit' appears in the equation for: Statistics.
_INIT_

END_DESCRIPTION

Parameter_AvMemControlled
Global average of indicator MemoryControlled, providing the expecations of firms to be controlled.

'AvMemControlled' appears in the equation for: Statistics.
_INIT_

END_DESCRIPTION

Parameter_ProbControl
(no description available)
_INIT_
 All 100 instances equal to 0.1.
END_DESCRIPTION

Variable_GovernmentUtility
(no description available)
_INIT_

END_DESCRIPTION

Parameter_TotalCost
(no description available)
_INIT_

END_DESCRIPTION

Parameter_TotalFine
(no description available)
_INIT_

END_DESCRIPTION

Parameter_TotalControls
(no description available)
_INIT_

END_DESCRIPTION

Parameter_CostControl
(no description available)
_INIT_

END_DESCRIPTION

Parameter_TotalCaughtEvading
(no description available)
_INIT_

END_DESCRIPTION

Object_Demand
'Demand' appears in the equation for: (Never Used).
_INIT_

END_DESCRIPTION

Parameter_numConsumer
Number of consumers

'numConsumer' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Parameter_numcLinks
Number of peers each consumer consult for information.

'numcLinks' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Variable_InitDemand
Create a network of consumers connected randomly to each other.

Moreover, each consumer is endowed with a number of suppliers, choosing randomly, from which it will have to choose.

'InitDemand' appears in the equation for: Init.
_INIT_

END_DESCRIPTION

Parameter_numSuppliers
Number  of suppliers each consumer consumer considers to buy from.

'numSuppliers' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Parameter_ExpPurchase
Exponent of probability in choosing from suppliers. The higher the more likely high utility product will be chosen.

'ExpPurchase' appears in the equation for: Purchase.
_INIT_

END_DESCRIPTION

Parameter_aUtility
Speed of updating of consumer welfare, slowly tracking the utility of the latest product purchased.

'aUtility' appears in the equation for: Purchase.
_INIT_

END_DESCRIPTION

Parameter_aProbEvasion
Speed of updating of the probability for consumers to buy from evading firms, slowly tracking the same indicator from related peers and personal experience (consumer fined because buying from a tax evading firm).

'aProbEvasion' appears in the equation for: ProbAcceptEvasion.
_INIT_

END_DESCRIPTION

Parameter_WeightDirectExperience
Relevance of personal experience vs observed states in relation on accepting sales from evading firms.

Used in ProbAcceptEvasion
_INIT_

END_DESCRIPTION

Object_Consumer
'Consumer' appears in the equation for: Shopping, InitDemand.
_INIT_

END_DESCRIPTION

Parameter_idConsumer
Identification number of consumers

'idConsumer' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Parameter_ProdUsed
Id of the product purchased by the consumer, decided in equation Purchase

'ProdUsed' appears in the equation for: Purchase.
_INIT_

END_DESCRIPTION

Parameter_ConsumerWelfare
Estimation of consumer welfare, so far no used.

'ConsumerWelfare' appears in the equation for: Purchase.
_INIT_

END_DESCRIPTION

Variable_ProbAcceptEvasion
Probability to include suppliers evading taxes within the option set for potential purchaes.

It is computed as a slow approximation to the average probability of evading from its own experience and that from other consumers.

'ProbAcceptEvasion' appears in the equation for: Purchase, ProbAcceptEvasion.
_INIT_

END_DESCRIPTION

Parameter_Fined
Flag indicating whether the consumer was fined for purchasing from an evading firm.
'Fined' appears in the equation for: Shopping.
_INIT_

END_DESCRIPTION

Object_cLink
'cLink' appears in the equation for: ProbAcceptEvasion, InitDemand.
_INIT_

END_DESCRIPTION

Parameter_idcLink
Id of the consumer peer this link refers to.

'idcLink' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Object_Supplier
'Supplier' appears in the equation for: Purchase, InitDemand.
_INIT_

END_DESCRIPTION

Parameter_idSupplier
Id of the firm chosen by the consumer as supplied.

'idSupplier' appears in the equation for: InitDemand.
_INIT_

END_DESCRIPTION

Parameter_sapp
Technical parameter, used to store the probability of a purchase.

'sapp' appears in the equation for: Purchase.
_INIT_

END_DESCRIPTION

Object_Supply
'Supply' appears in the equation for: (Never Used).
_INIT_

END_DESCRIPTION

Parameter_numfLinks
Number of firms connected to each firm for collecting information.

'numfLinks' appears in the equation for: InitSupply.
_INIT_

END_DESCRIPTION

Parameter_numFirms
Number of firms.

'numFirms' appears in the equation for: InitSupply, InitDemand.
_INIT_

END_DESCRIPTION

Variable_InitSupply
Create a network of firms connected randomly to each other.

'InitSupply' appears in the equation for: Init.
_INIT_

END_DESCRIPTION

Function_Purchase
Choose one product and assign it to the consumer, pointed to by c->

The choice is probabilistic, depending on the acceptance of tax cheating firms by the consumer and on the Utility of the product offered by the sellers.

The equation also register the sale of the selected firm.

'Purchase' appears in the equation for: Shopping.
_INIT_

END_DESCRIPTION

Parameter_BasicUtility
Underlining utility of the product.

'BasicUtility' appears in the equation for: Utility.
_INIT_

END_DESCRIPTION

Parameter_UnitTax
Level of the tax that lawful firms pay for each sale.

'UnitTax' appears in the equation for: Utility.
_INIT_

END_DESCRIPTION

Parameter_UnitGainEvasion
Absolute amount of gains for the producer in case of cheating. This value is the share of UnitTax left to the producer, the remaining unpaid tax of evading is received by the consumer.
 
'UnitGainEvasion' appears in the equation for: Utility, Evading, Profit.
_INIT_

END_DESCRIPTION

Parameter_UnitFine
Fine paid by the producer if discovered cheating.

'UnitFine' appears in the equation for: Evading, Profit.
_INIT_
 All 100 instances set ranging from 0.5 to 1.5 (i.e. increments of 0.010101).
END_DESCRIPTION

Parameter_LumpPunishment
Extra cost to pay by the firm discovered cheating, independent from the level of sales.
 
'LumpPunishment' appears in the equation for: Evading, Profit.
_INIT_

END_DESCRIPTION

Parameter_aAvSales
Speed of change of the indicator used as moving average for the level of sales.

'aAvSales' appears in the equation for: AvSales, AvSalesEvading, AvSalesNoEvading.
_INIT_

END_DESCRIPTION

Parameter_UnitProfit
Profits generated by one sale in case taxes are regularly paid.

'UnitProfit' appears in the equation for: Evading, Profit.
_INIT_

END_DESCRIPTION

Parameter_aMemControlled
Speed of updating of the indicator used to track the expectations of being controlled by the government.

'aMemControlled' appears in the equation for: Evading.
_INIT_

END_DESCRIPTION

Parameter_weightPersonalMemory
Relevance of direct experience vs observed levels from peers concerning the expectations of being caught cheating.

'weightPersonalMemory' appears in the equation for: Evading, AvSalesEvading, AvSalesNoEvading.
_INIT_

END_DESCRIPTION

Object_Firm
'Firm' appears in the equation for: Shopping, Statistics, InitSupply.
_INIT_

END_DESCRIPTION

Parameter_idFirm
Identification of the firm

'idFirm' appears in the equation for: Purchase, InitSupply, InitDemand.
_INIT_

END_DESCRIPTION

Parameter_Sales
Level of sales

'Sales' appears in the equation for: Purchase, AvSales, AvSalesEvading, AvSalesNoEvading, Profit, Shopping.
_INIT_

END_DESCRIPTION

Variable_Evading
Flag signaling whether the firm cheats on taxes (1) or pays (0)

In case of control it is set to 0.

Otherwise, it uses an estimation of the gain from paying taxes and not paying them, the discounted by the observed risk of being caught.

'Evading' appears in the equation for: Purchase, Utility, AvSalesEvading, AvSalesNoEvading, Profit, Shopping, Statistics, InitSupply.
_INIT_

END_DESCRIPTION

Variable_Utility
Utility for the consumer by choosing one product, mix of standard utility plus, in case of evasion, the difference of the unpaid tax and the extra gain for the producer.

'Utility' appears in the equation for: Purchase, InitSupply.
_INIT_

END_DESCRIPTION

Parameter_MemoryControlled
Estimation of being controlled by the government.

'MemoryControlled' appears in the equation for: Evading, Statistics.
_INIT_

END_DESCRIPTION

Parameter_Punished
Flag recording evading form caught cheating in a control.

'Punished' appears in the equation for: Evading, Profit.
_INIT_

END_DESCRIPTION

Variable_AvSalesEvading
Estimate of moving average of sales when evading

'AvSalesEvading' appears in the equation for: Evading, AvSalesEvading, InitSupply.
_INIT_

END_DESCRIPTION

Variable_AvSalesNoEvading
Estimate of moving sales when not evading

'AvSalesNoEvading' appears in the equation for: Evading, AvSalesNoEvading, InitSupply.
_INIT_

END_DESCRIPTION

Parameter_GainEvading
Statistics registering the gain from evading

'GainEvading' appears in the equation for: Evading.
_INIT_

END_DESCRIPTION

Parameter_CostEvading
Statistics indicating the costs of evading.

'CostEvading' appears in the equation for: Evading.
_INIT_

END_DESCRIPTION

Variable_AvSales
Compute the moving average of sales

'AvSales' appears in the equation for: Evading, AvSales, InitSupply.
_INIT_

END_DESCRIPTION

Variable_Profit
Profit are proportional to sale. If the firm evades taxes it also gains from a share of unpaid tax. In case of being caught it pays the fine.

The fine is computed on each single sale. Additionally, a lump punishment, such as a prison term, is added to the penalty.

'Profit' appears in the equation for: Statistics.
_INIT_

END_DESCRIPTION

Object_fLink
'fLink' appears in the equation for: Evading, AvSalesEvading, AvSalesNoEvading, InitSupply.
_INIT_

END_DESCRIPTION

Parameter_idfLink
Identification of the firm observed to get information.

'idfLink' appears in the equation for: InitSupply.
_INIT_

END_DESCRIPTION


DOCUOBSERVE
AvEvading
AvProfit
AvMemControlled
Sales

END_DOCUOBSERVE


DOCUINITIAL
ProbFirmControl
ProbConsumerControl
numConsumer
numcLinks
numSuppliers
ExpPurchase
aUtility
aProbEvasion
WeightDirectExperience
numfLinks
numFirms
BasicUtility
UnitTax
UnitGainEvasion
UnitFine
LumpPunishment
aAvSales
UnitProfit
aMemControlled
weightPersonalMemory

END_DOCUINITIAL


EQ_FILE
#include "fun_head.h"

MODELBEGIN











MODELEND




void close_sim(void)
{

}



END_EQ_FILE
